// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String           @id @default(uuid())
  name              String
  email             String           @unique
  password          String
  phoneNumber       String?
  adress            String?
  avatar            String?
  role              Role             @default(USER)
  profileType       ProfileType
  businessProfile   BusinessProfile?
  locationId        String?
  location          Location?        @relation(fields: [locationId], references: [id])
  businessProfileId String?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  Listing           Listing[]
  Subscription      Subscription[]
  Favorite          Favorite[]

  @@index([email])
}

model Location {
  id        String   @id @default(uuid())
  country   String
  city      String
  latitude  Float
  longitude Float
  createdAt DateTime @default(now())

  User    User[]
  Listing Listing[]
}

enum ProfileType {
  PERSONAL
  BUSINESS
}

enum Role {
  USER
  PRO
  ADMIN
}

model BusinessProfile {
  id          String  @id @default(uuid())
  userId      String  @unique
  user        User    @relation(fields: [userId], references: [id])
  vatNumber   String?
  website     String?
}

model Subscription {
  id        String             @id @default(uuid())
  userId    String             @unique
  user      User               @relation(fields: [userId], references: [id])
  plan      SubscriptionPlan
  status    SubscriptionStatus @default(ACTIVE)
  expiresAt DateTime
  createdAt DateTime           @default(now())

  @@index([userId, plan, status])
}

enum SubscriptionPlan {
  FREE
  PRO
  BUSINESS
}

enum SubscriptionStatus {
  ACTIVE
  CANCELLED
  EXPIRED
}

enum UserRole {
  USER
  ADMIN           
  SUPER_ADMIN     
  MODERATOR       
  SUPPORT        
  CONTENT_MANAGER
}

model Category {
  id            String        @id @default(cuid())
  name          String        @unique
  subCategories SubCategory[]
  createdAt     DateTime      @default(now())
}

model SubCategory {
  id         String    @id @default(cuid())
  name       String
  category   Category  @relation(fields: [categoryId], references: [id])
  categoryId String
  listings   Listing[]
  createdAt  DateTime  @default(now())

  @@unique([name, categoryId])
}

model Listing {
  id            String        @id @default(cuid())
  title         String
  description   String
  price         Float
  currency      String // "EUR", "USD", "RWF", etc.
  user          User          @relation(fields: [userId], references: [id])
  userId        String
  subCategory   SubCategory   @relation(fields: [subCategoryId], references: [id])
  subCategoryId String
  location      Location?     @relation(fields: [locationId], references: [id])
  locationId    String?
  extraFields   Json?
  images        String[]
  status        ListingStatus @default(ACTIVE)
  createdAt     DateTime      @default(now())
  Boost         Boost[]       @relation("ListingBoosts")
  Favorite      Favorite[]

  @@index([subCategoryId])
  @@index([locationId])
}

enum ListingStatus {
  ACTIVE
  SUSPENDED
  SOLD
  BLOCKED
}

model Boost {
  id         String      @id @default(uuid())
  listingId  String
  listing    Listing     @relation("ListingBoosts", fields: [listingId], references: [id])
  startDate  DateTime    @default(now())
  endDate    DateTime
  status     BoostStatus @default(ACTIVE)
  amountPaid Float
  boostType  BoostType

  @@index([listingId, status])
}

model Favorite {
  id        String   @id @default(uuid())
  userId    String
  listingId String
  user      User     @relation(fields: [userId], references: [id])
  listing   Listing  @relation(fields: [listingId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, listingId])
}

enum BoostStatus {
  ACTIVE
  EXPIRED
  CANCELLED
}

enum BoostType {
  TOP_LISTING // Annonce en haut de la liste
  HIGHLIGHTED // Annonce mise en avant
  FEATURED // Annonce avec plus de visibilit√©
}
